#!/bin/bash

source ../config/backup.conf

echo "=== TESTE DE AMBIENTE E CONFIGURA√á√ÉO ==="
echo ""

# Verificar depend√™ncias
echo "üîß VERIFICANDO DEPEND√äNCIAS:"
DEPS=("rsync" "tar" "find" "du" "launchctl")
for dep in "${DEPS[@]}"; do
    if command -v "$dep" >/dev/null 2>&1; then
        VERSION=$(command -v "$dep" | xargs ls -l 2>/dev/null || echo "N/A")
        echo "‚úÖ $dep: $(which "$dep")"
    else
        echo "‚ùå $dep: N√ÉO ENCONTRADO"
    fi
done

echo ""
echo "üìÅ VERIFICANDO ESTRUTURA DE DIRET√ìRIOS:"
REQUIRED_DIRS=("../config" "../../logs" "../../scripts")
for dir in "${REQUIRED_DIRS[@]}"; do
    if [ -d "$dir" ]; then
        echo "‚úÖ $dir existe"
    else
        echo "‚ùå $dir n√£o encontrado"
    fi
done

echo ""
echo "üìÑ VERIFICANDO ARQUIVOS ESSENCIAIS:"
REQUIRED_FILES=("../backup.sh" "../restore.sh" "../config/backup.conf" "../../scripts/install.sh")
for file in "${REQUIRED_FILES[@]}"; do
    if [ -f "$file" ]; then
        PERM=$(ls -l "$file" | cut -d' ' -f1)
        echo "‚úÖ $file ($PERM)"
    else
        echo "‚ùå $file n√£o encontrado"
    fi
done

echo ""
echo "üéØ VERIFICANDO CONFIGURA√á√ïES:"
echo "‚îú‚îÄ Destino: $BACKUP_DESTINATION"
echo "‚îú‚îÄ Hor√°rio: $SCHEDULE"  
echo "‚îú‚îÄ Reten√ß√£o: $BACKUP_RETENTION_DAYS dias"
echo "‚îî‚îÄ Total de fontes: ${#SOURCE_DIRECTORIES[@]}"

# Verificar destino
if [ -d "$BACKUP_DESTINATION" ]; then
    SPACE=$(df -h "$BACKUP_DESTINATION" | tail -1 | awk '{print $4}')
    echo "üíæ Espa√ßo dispon√≠vel: $SPACE"
else
    echo "‚ö†Ô∏è  Destino n√£o montado: $BACKUP_DESTINATION"
fi