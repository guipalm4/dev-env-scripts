#!/bin/bash
# filepath: src/test/test_automation.sh

echo "=== TESTE DE AUTOMA√á√ÉO E AGENDAMENTO ==="
echo ""

# Verificar LaunchAgent
echo "ü§ñ VERIFICANDO LAUNCHAGENT..."
PLIST_FILE="$HOME/Library/LaunchAgents/com.backup.automation.plist"

if [ -f "$PLIST_FILE" ]; then
    echo "‚úÖ Arquivo plist existe"
    
    # Verificar sintaxe
    if plutil -lint "$PLIST_FILE" >/dev/null 2>&1; then
        echo "‚úÖ Sintaxe do plist v√°lida"
    else
        echo "‚ùå Sintaxe do plist inv√°lida"
    fi
    
    # Verificar se est√° carregado
    if launchctl list | grep -q com.backup.automation; then
        echo "‚úÖ Servi√ßo carregado"
        
        # Obter informa√ß√µes
        STATUS=$(launchctl list com.backup.automation)
        echo "üìä Status do servi√ßo:"
        echo "$STATUS" | grep -E "(PID|LastExitStatus|Label)"
    else
        echo "‚ùå Servi√ßo n√£o carregado"
    fi
else
    echo "‚ùå Arquivo plist n√£o encontrado"
fi

# Testar execu√ß√£o manual
echo ""
echo "üß™ TESTANDO EXECU√á√ÉO MANUAL..."
if launchctl start com.backup.automation 2>/dev/null; then
    echo "‚úÖ Comando de start executado"
    sleep 5
    
    # Verificar logs
    if [ -f "../../logs/launchd.log" ]; then
        echo "‚úÖ Log criado"
        echo "√öltimas 3 linhas do log:"
        tail -3 "../../logs/launchd.log"
    else
        echo "‚ö†Ô∏è  Log n√£o encontrado"
    fi
else
    echo "‚ùå Falha ao executar comando start"
fi

# Verificar pr√≥xima execu√ß√£o
echo ""
echo "‚è∞ VERIFICANDO AGENDAMENTO..."
SCHEDULE_INFO=$(launchctl print gui/$(id -u)/com.backup.automation 2>/dev/null | grep -A5 "start calendar interval\|StartCalendarInterval")
if [ -n "$SCHEDULE_INFO" ]; then
    echo "‚úÖ Agendamento configurado"
else
    echo "‚ö†Ô∏è  Informa√ß√µes de agendamento n√£o encontradas"
fi